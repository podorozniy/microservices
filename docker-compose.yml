version: '3.3'
services:
  mongo_db:
    image: mongo:3.2
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:/data/db
    networks:
      mongodb-exporter-network:
      back_net:
        aliases:
          - post_db
          - comment_db
  ui:
    image: podorozniy/ui:${VERSION_UI}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      resources:
        limits:
          cpus: '0.25'
          memory: 150M
      update_config:
        delay: 5s
        parallelism: 1
        failure_action: pause
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    environment:
      - ENV=DEV
    ports:
      - ${PORT}:${PORT}/${PROTOCOL}
    networks:
      - front_net

  post:
    image: podorozniy/post:${VERSION_POST}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    networks:
      - front_net
      - back_net

  comment:
    image: podorozniy/comment:${VERSION_COMMENT}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    networks:
      - front_net
      - back_net

volumes:
  post_db:

networks:
  front_net:
  back_net:
  mongodb-exporter-network:
